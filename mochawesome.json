{
  "stats": {
    "suites": 33,
    "tests": 170,
    "passes": 162,
    "pending": 2,
    "failures": 6,
    "start": "2023-03-07T11:05:43.663Z",
    "end": "2023-03-07T11:12:43.662Z",
    "duration": 230916,
    "testsRegistered": 170,
    "passPercent": 95.29411764705883,
    "pendingPercent": 1.1764705882352942,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4c97dcb-d674-4654-a2d5-c3a82ea232ca",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "file": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa4207a8-94ea-4063-83b9-de2ba3ed0006",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 1455,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "d99bf1ec-23df-45eb-ad50-e81bedc8a16d",
              "parentUUID": "aa4207a8-94ea-4063-83b9-de2ba3ed0006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 780,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "4275bce8-39b6-4ed9-bcd5-ac9f1f849769",
              "parentUUID": "aa4207a8-94ea-4063-83b9-de2ba3ed0006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d99bf1ec-23df-45eb-ad50-e81bedc8a16d",
            "4275bce8-39b6-4ed9-bcd5-ac9f1f849769"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66132084-d2cb-4c53-b1f0-5f7fd10c1076",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e49ff3c-de9f-41da-8005-b8016fd52b29",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "974ecc89-d7cf-46ae-8f5f-dfbef1ed82bb",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 666,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "cab21fc5-884c-4b58-8977-13920355a64e",
                  "parentUUID": "974ecc89-d7cf-46ae-8f5f-dfbef1ed82bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 241,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "51867af1-1580-419a-8973-3f5760e2106c",
                  "parentUUID": "974ecc89-d7cf-46ae-8f5f-dfbef1ed82bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cab21fc5-884c-4b58-8977-13920355a64e",
                "51867af1-1580-419a-8973-3f5760e2106c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 907,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "219192e6-0071-401a-8dc6-350fe716e9cd",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 302,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "88ebfaf7-63a6-4d40-b11f-73a2d6df5739",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "9d206d92-0f05-4e69-a8b4-be239b8408cb",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 543,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "73f7210d-cdf7-4762-9ef7-c966ecb9a934",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 327,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "4e7f2683-ef98-49f3-adc9-e367cf916621",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "c970d01f-992f-4d57-940b-30c70b84965f",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 489,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "303e4723-b0d1-4e3b-93f4-62fc4035f008",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1640,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "3fec1451-6f00-4c8f-b246-c5e5a0acb06d",
                  "parentUUID": "219192e6-0071-401a-8dc6-350fe716e9cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "88ebfaf7-63a6-4d40-b11f-73a2d6df5739",
                "9d206d92-0f05-4e69-a8b4-be239b8408cb",
                "73f7210d-cdf7-4762-9ef7-c966ecb9a934",
                "4e7f2683-ef98-49f3-adc9-e367cf916621",
                "c970d01f-992f-4d57-940b-30c70b84965f",
                "303e4723-b0d1-4e3b-93f4-62fc4035f008",
                "3fec1451-6f00-4c8f-b246-c5e5a0acb06d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3623,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f0ee0970-129a-46be-9fdf-ba0d932351c5",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "file": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c609a30-4bbf-4559-a99f-70f688b85e0e",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 1435,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "fddc8811-8e01-4e7a-8b9a-538f8a6547e8",
              "parentUUID": "3c609a30-4bbf-4559-a99f-70f688b85e0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "a911fb35-9708-4e55-b1fa-a68e1fea1adc",
              "parentUUID": "3c609a30-4bbf-4559-a99f-70f688b85e0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden')\n// call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "3cd3f92f-df82-425f-86be-826c9b8c408d",
              "parentUUID": "3c609a30-4bbf-4559-a99f-70f688b85e0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "3249e34c-9e25-40f0-bc60-0bcd9909d74d",
              "parentUUID": "3c609a30-4bbf-4559-a99f-70f688b85e0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "02f13d2b-0c25-4903-ae61-9c00c614e8c7",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 178,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "1348be80-6add-412c-bbbe-b3c983838d6e",
                  "parentUUID": "02f13d2b-0c25-4903-ae61-9c00c614e8c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "fb798174-6c09-403e-825d-d8f0e34d8363",
                  "parentUUID": "02f13d2b-0c25-4903-ae61-9c00c614e8c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 194,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "c29073e3-8a81-475f-b460-d4d82b71e83c",
                  "parentUUID": "02f13d2b-0c25-4903-ae61-9c00c614e8c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 394,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "dbddddf1-bd18-49a3-a9ac-ef403324aa00",
                  "parentUUID": "02f13d2b-0c25-4903-ae61-9c00c614e8c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1348be80-6add-412c-bbbe-b3c983838d6e",
                "fb798174-6c09-403e-825d-d8f0e34d8363",
                "c29073e3-8a81-475f-b460-d4d82b71e83c",
                "dbddddf1-bd18-49a3-a9ac-ef403324aa00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 929,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "fddc8811-8e01-4e7a-8b9a-538f8a6547e8",
            "a911fb35-9708-4e55-b1fa-a68e1fea1adc",
            "3cd3f92f-df82-425f-86be-826c9b8c408d",
            "3249e34c-9e25-40f0-bc60-0bcd9909d74d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ac16bef8-615e-44ce-ada3-32c0291de47b",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 1087,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "2e865165-ebd3-4436-836b-bd4d2deb00e7",
              "parentUUID": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "8810de0f-70f3-492d-8981-1ba8999fb26f",
              "parentUUID": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "4d7a6d49-caa4-4b7b-9c6d-d9f7ea9df008",
              "parentUUID": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "e7145c57-dcfa-40d1-9918-7ade3b98e759",
              "parentUUID": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 548,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "4383df74-8a89-42be-b972-31d77b4bbee5",
              "parentUUID": "17784985-e76c-4d18-a2e8-a0186ea83dbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e865165-ebd3-4436-836b-bd4d2deb00e7",
            "8810de0f-70f3-492d-8981-1ba8999fb26f",
            "4d7a6d49-caa4-4b7b-9c6d-d9f7ea9df008",
            "e7145c57-dcfa-40d1-9918-7ade3b98e759",
            "4383df74-8a89-42be-b972-31d77b4bbee5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51cee97d-a492-4983-adb6-2509850c2231",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ae5b822-2cdf-4e60-b9cc-064cf2a06ba7",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 530,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
              "err": {},
              "uuid": "1d9ae75e-0276-4031-b6ac-3d6912e9e55c",
              "parentUUID": "3ae5b822-2cdf-4e60-b9cc-064cf2a06ba7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d9ae75e-0276-4031-b6ac-3d6912e9e55c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b183fb4b-29b8-4662-a0d4-8b424f1d88bc",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "9827a973-f472-4992-887c-5068f77d7f17",
              "parentUUID": "b183fb4b-29b8-4662-a0d4-8b424f1d88bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 510,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok');\n// preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {
                "message": "CypressError: `Cypress.Cookies.preserveOnce()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session",
                "estack": "CypressError: `Cypress.Cookies.preserveOnce()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session\n    at Object.preserveOnce (https://example.cypress.io/__cypress/runner/cypress_runner.js:150537:75)\n    at runnable.fn (https://example.cypress.io/__cypress/runner/cypress_runner.js:151413:19)\n    at callFn (https://example.cypress.io/__cypress/runner/cypress_runner.js:104964:21)\n    at ../driver/node_modules/mocha/lib/runnable.js.Runnable.run (https://example.cypress.io/__cypress/runner/cypress_runner.js:104951:7)\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:158443:30)\n    at PassThroughHandlerContext.finallyHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:5468:23)\n    at PassThroughHandlerContext.tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)",
                "diff": null
              },
              "uuid": "a7fc3bf6-e1c3-4edd-bae3-45e572698fb7",
              "parentUUID": "b183fb4b-29b8-4662-a0d4-8b424f1d88bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 296,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {
                "message": "CypressError: `Cypress.Cookies.defaults()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session",
                "estack": "CypressError: `Cypress.Cookies.defaults()` was removed in Cypress version 12.0.0. Please update to use `cy.session()` instead.\n\nhttps://on.cypress.io/session\n    at Object.defaults (https://example.cypress.io/__cypress/runner/cypress_runner.js:150557:75)\n    at runnable.fn (https://example.cypress.io/__cypress/runner/cypress_runner.js:151413:19)\n    at callFn (https://example.cypress.io/__cypress/runner/cypress_runner.js:104964:21)\n    at ../driver/node_modules/mocha/lib/runnable.js.Runnable.run (https://example.cypress.io/__cypress/runner/cypress_runner.js:104951:7)\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:158443:30)\n    at PassThroughHandlerContext.finallyHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:5468:23)\n    at PassThroughHandlerContext.tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)",
                "diff": null
              },
              "uuid": "d37baff9-d8fc-413d-b36b-9479cef4ca72",
              "parentUUID": "b183fb4b-29b8-4662-a0d4-8b424f1d88bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9827a973-f472-4992-887c-5068f77d7f17"
          ],
          "failures": [
            "a7fc3bf6-e1c3-4edd-bae3-45e572698fb7",
            "d37baff9-d8fc-413d-b36b-9479cef4ca72"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b4fe35b-4b2a-426a-bf2d-f8aa7b57eebf",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "3a10188c-5473-489b-806d-939d69a4721d",
              "parentUUID": "6b4fe35b-4b2a-426a-bf2d-f8aa7b57eebf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a10188c-5473-489b-806d-939d69a4721d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a3936501-e465-4fb0-9278-2c96829a98dc",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "daf6c112-741d-4b41-b800-a91c1ccd76b5",
              "parentUUID": "a3936501-e465-4fb0-9278-2c96829a98dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daf6c112-741d-4b41-b800-a91c1ccd76b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "94cac85e-cf0c-4980-8e42-e8bf86b5b506",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "6fc82e50-a55b-4f10-8da3-c5ae4a2a1953",
              "parentUUID": "94cac85e-cf0c-4980-8e42-e8bf86b5b506",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6fc82e50-a55b-4f10-8da3-c5ae4a2a1953"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ec75245-e4b3-458c-bc91-cede825e191a",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "141bdf66-a2de-47a2-a202-b6faae583c8a",
              "parentUUID": "0ec75245-e4b3-458c-bc91-cede825e191a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "141bdf66-a2de-47a2-a202-b6faae583c8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcc91390-9636-465f-84d4-30bb0eaae14a",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "03bccb9d-a72c-4ce1-9ad5-f762bf79f3cc",
              "parentUUID": "fcc91390-9636-465f-84d4-30bb0eaae14a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03bccb9d-a72c-4ce1-9ad5-f762bf79f3cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 467,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6bf99140-8038-43a6-8ade-96185ffb383d",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "ba1531e7-fdb4-41f3-b5bb-61aa1ff00ed7",
              "parentUUID": "6bf99140-8038-43a6-8ade-96185ffb383d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba1531e7-fdb4-41f3-b5bb-61aa1ff00ed7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ebf241a-810f-4f69-9fad-b5b7f6f77e02",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "1fcd6a4b-0d29-4ff6-ac3e-ae22c0431132",
              "parentUUID": "1ebf241a-810f-4f69-9fad-b5b7f6f77e02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fcd6a4b-0d29-4ff6-ac3e-ae22c0431132"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ab37eaa-31b0-40cd-af91-dbf98a070871",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "f7fa015f-ce10-4c9e-a658-1fc4565c4622",
              "parentUUID": "3ab37eaa-31b0-40cd-af91-dbf98a070871",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7fa015f-ce10-4c9e-a658-1fc4565c4622"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d1c70b31-6e72-4868-a045-808f7335af55",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/files.cy.js",
      "file": "cypress/e2e/2-advanced-examples/files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d7f0ff8d-74d1-4b89-8591-f5461d3f54c0",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 1412,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "287663bb-f453-42d8-93eb-6c9b20aabd42",
              "parentUUID": "d7f0ff8d-74d1-4b89-8591-f5461d3f54c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "26147556-6e7a-4877-9fe4-49b922fb3006",
              "parentUUID": "d7f0ff8d-74d1-4b89-8591-f5461d3f54c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(json => {\n  expect(json).to.be.an('object');\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: `cy.readFile(\"cypress.json\")` failed because the file does not exist at the following path:\n\n`/home/rferreira/Documentos/cypress-practice/cypress-bases/cypress.json`\n\nhttps://on.cypress.io/readfile",
                "estack": "AssertionError: Timed out retrying after 4000ms: `cy.readFile(\"cypress.json\")` failed because the file does not exist at the following path:\n\n`/home/rferreira/Documentos/cypress-practice/cypress-bases/cypress.json`\n\nhttps://on.cypress.io/readfile\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/files.cy.js:54:7)",
                "diff": null
              },
              "uuid": "446331eb-5ed1-4eb9-a7a1-b3b7d571ecaf",
              "parentUUID": "d7f0ff8d-74d1-4b89-8591-f5461d3f54c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "411e4eb9-daf3-471e-a348-d765a5909cc5",
              "parentUUID": "d7f0ff8d-74d1-4b89-8591-f5461d3f54c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "287663bb-f453-42d8-93eb-6c9b20aabd42",
            "26147556-6e7a-4877-9fe4-49b922fb3006",
            "411e4eb9-daf3-471e-a348-d765a5909cc5"
          ],
          "failures": [
            "446331eb-5ed1-4eb9-a7a1-b3b7d571ecaf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7050,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f0309197-aece-4897-ac69-66add114a578",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/local_storage.cy.js",
      "file": "cypress/e2e/2-advanced-examples/local_storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00681db6-4552-471c-a64c-9792b9867293",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear key matching string in Local Storage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in Local Storage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`\n    at <unknown> (http://localhost:41515/__cypress/runner/cypress_runner.js:138236:84)\n    at visitFailedByErr (http://localhost:41515/__cypress/runner/cypress_runner.js:137644:12)\n    at <unknown> (http://localhost:41515/__cypress/runner/cypress_runner.js:138219:13)\n    at tryCatcher (http://localhost:41515/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41515/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (http://localhost:41515/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (http://localhost:41515/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (http://localhost:41515/__cypress/runner/cypress_runner.js:7027:18)\n    at _drainQueueStep (http://localhost:41515/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (http://localhost:41515/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41515/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (http://localhost:41515/__cypress/runner/cypress_runner.js:3500:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/local_storage.cy.js:5:7)",
                "diff": null
              },
              "uuid": "7f894912-b4f3-4b82-85c1-f7408825e8f2",
              "parentUUID": "00681db6-4552-471c-a64c-9792b9867293",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7f894912-b4f3-4b82-85c1-f7408825e8f2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 302,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4bf22348-e34c-4437-b477-d9e2cbd12768",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/location.cy.js",
      "file": "cypress/e2e/2-advanced-examples/location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a21b2ef9-03a1-4536-9c16-07a2b65593c6",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 576,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "6ff7d797-aceb-4484-b1ce-94cbb2a5b3cb",
              "parentUUID": "a21b2ef9-03a1-4536-9c16-07a2b65593c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "464321cf-4378-4069-a823-f264203316e5",
              "parentUUID": "a21b2ef9-03a1-4536-9c16-07a2b65593c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "d2f6a0d3-a07e-4edc-af07-c684696b354d",
              "parentUUID": "a21b2ef9-03a1-4536-9c16-07a2b65593c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ff7d797-aceb-4484-b1ce-94cbb2a5b3cb",
            "464321cf-4378-4069-a823-f264203316e5",
            "d2f6a0d3-a07e-4edc-af07-c684696b354d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "797b9a7e-51b8-4c6b-94f6-bac798febcb2",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "file": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83fbb545-8358-449b-86db-88145167f1d7",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1422,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end();\n  // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "8f58d243-9cca-4494-a9c2-7c4b37d7e471",
              "parentUUID": "83fbb545-8358-449b-86db-88145167f1d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 949,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {
                "message": "CypressError: `cy.exec('cat cypress.json')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 1\n\nStderr:\ncat: cypress.json: No existe el archivo o el directorio\n\nhttps://on.cypress.io/exec",
                "estack": "CypressError: `cy.exec('cat cypress.json')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 1\n\nStderr:\ncat: cypress.json: No existe el archivo o el directorio\n\nhttps://on.cypress.io/exec\n    at <unknown> (https://example.cypress.io/__cypress/runner/cypress_runner.js:136664:85)\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:8914:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:6849:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:6906:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:6951:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:7031:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:3621:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:3614:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3630:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:3500:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/2-advanced-examples/misc.cy.js:61:9)",
                "diff": null
              },
              "uuid": "07ec49e0-ceb5-4e3b-ba29-34db1139f140",
              "parentUUID": "83fbb545-8358-449b-86db-88145167f1d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "83d7f95f-fcda-4767-8b83-cdfb39ff37aa",
              "parentUUID": "83fbb545-8358-449b-86db-88145167f1d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "434abc69-5f19-4ed2-8528-7901c2a31493",
              "parentUUID": "83fbb545-8358-449b-86db-88145167f1d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "fa03e022-033a-4c0f-9075-c40be78a57ad",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1589,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "e5e5cdd3-cbc5-4e47-ad27-19e61302b6f0",
                  "parentUUID": "fa03e022-033a-4c0f-9075-c40be78a57ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "902ddd0f-778d-479b-96b2-f2d483b36148",
                  "parentUUID": "fa03e022-033a-4c0f-9075-c40be78a57ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5e5cdd3-cbc5-4e47-ad27-19e61302b6f0",
                "902ddd0f-778d-479b-96b2-f2d483b36148"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1738,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8f58d243-9cca-4494-a9c2-7c4b37d7e471",
            "83d7f95f-fcda-4767-8b83-cdfb39ff37aa",
            "434abc69-5f19-4ed2-8528-7901c2a31493"
          ],
          "failures": [
            "07ec49e0-ceb5-4e3b-ba29-34db1139f140"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29feb1fd-7e88-4f76-a3e8-70b46504220d",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "file": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b58f8396-efc3-4a89-87dd-f32bd8a132be",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 3708,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "a08ef2bf-ee43-41c6-835e-be7683086361",
              "parentUUID": "b58f8396-efc3-4a89-87dd-f32bd8a132be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1019,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "b481a591-19b2-4850-a870-7ec9ff1df26f",
              "parentUUID": "b58f8396-efc3-4a89-87dd-f32bd8a132be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "899cb354-3f3e-46c2-96f3-2540c561407b",
              "parentUUID": "b58f8396-efc3-4a89-87dd-f32bd8a132be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a08ef2bf-ee43-41c6-835e-be7683086361",
            "b481a591-19b2-4850-a870-7ec9ff1df26f",
            "899cb354-3f3e-46c2-96f3-2540c561407b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5169,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ab544488-dd1b-4eaa-af0c-2ca2b5babea1",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/network_requests.cy.js",
      "file": "cypress/e2e/2-advanced-examples/network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff4122d8-6ce1-423a-848a-68b67b493b19",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1878,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200);\n  // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "ca23f1d3-78e2-47ae-8bd2-1e468b2387ec",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 998,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "618e8928-cf7a-4c27-83f8-ee98ff19b12b",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "c445443b-a0f9-4a5f-b25a-3a2a110852f8",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number');\n  // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n})\n// note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  });\n  // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100);\n  // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "7759cc44-9a59-416a-8c8d-d908df2a5fbb",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 1000,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE ðŸ‘€\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "8e38f881-36a5-46af-920b-6ee37a44b754",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 2135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist';\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);\n// Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n});\n// Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "5706cb9a-0355-4c69-a68e-1cf1d070a3c1",
              "parentUUID": "ff4122d8-6ce1-423a-848a-68b67b493b19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca23f1d3-78e2-47ae-8bd2-1e468b2387ec",
            "618e8928-cf7a-4c27-83f8-ee98ff19b12b",
            "c445443b-a0f9-4a5f-b25a-3a2a110852f8",
            "7759cc44-9a59-416a-8c8d-d908df2a5fbb",
            "8e38f881-36a5-46af-920b-6ee37a44b754",
            "5706cb9a-0355-4c69-a68e-1cf1d070a3c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7977,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cc367b31-7022-4a16-a687-94844ea16116",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "file": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "e66c1eff-ae1d-4eef-96ea-4508449e60d6",
              "parentUUID": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "efd6dc43-c5b7-4a60-8bc1-f0e4636a9fc9",
              "parentUUID": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "0e44c8f4-44aa-4068-bdc8-bf40165a34f4",
              "parentUUID": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "16425952-937d-4207-b541-318a13a527f7",
              "parentUUID": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click();\n  // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click();\n  // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click();\n  // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click();\n  // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click();\n  // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click();\n  // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "ad34f81e-1e18-44d1-b072-eac46f2682da",
              "parentUUID": "0d2815a6-6def-4cdc-8891-71fc02bd6ccd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e66c1eff-ae1d-4eef-96ea-4508449e60d6",
            "efd6dc43-c5b7-4a60-8bc1-f0e4636a9fc9",
            "0e44c8f4-44aa-4068-bdc8-bf40165a34f4",
            "16425952-937d-4207-b541-318a13a527f7",
            "ad34f81e-1e18-44d1-b072-eac46f2682da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c44acdb-4e40-4ea4-aba3-84c66e8e4829",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/spies_stubs_clocks.cy.js",
      "file": "cypress/e2e/2-advanced-examples/spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "7fa992ba-1048-4949-8a34-55ef2844c9fa",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "fc7259c3-5923-4ca8-b977-dca0eb472321",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "a4e635f5-29be-4e67-8d0e-5a9f31425e81",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "1e6f1fa4-9c05-4141-a6a5-f0812207b870",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "7245d3d6-0a3a-4c05-85c9-bc85d328f6d9",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "0cf6d235-4c4c-492a-8722-9ad0ab009448",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0;\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isLessThan = limit => x => x < limit;\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "a1d2d572-31b4-4b68-85ff-470b4b95fb34",
              "parentUUID": "6070ab6b-aa03-4ab4-a8ed-23e0ae15d1ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fa992ba-1048-4949-8a34-55ef2844c9fa",
            "fc7259c3-5923-4ca8-b977-dca0eb472321",
            "a4e635f5-29be-4e67-8d0e-5a9f31425e81",
            "1e6f1fa4-9c05-4141-a6a5-f0812207b870",
            "7245d3d6-0a3a-4c05-85c9-bc85d328f6d9",
            "0cf6d235-4c4c-492a-8722-9ad0ab009448",
            "a1d2d572-31b4-4b68-85ff-470b4b95fb34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d907b15-dac6-4988-9312-a583d3a7b409",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/traversal.cy.js",
      "file": "cypress/e2e/2-advanced-examples/traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "241500e0-c560-4a91-b6e0-9e41a1f34dc3",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "0ce06b2f-d60a-4408-bd4c-6a7ebea0822b",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "86deb070-4259-4605-8f31-2acefce5f354",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "d82328e1-09a0-4b95-8e7b-0d3bb6f17836",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "256a1ec0-735c-4687-8605-6818aef3e35a",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 468,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "4f5c12fd-26f8-4cc6-bbd5-36d076bac3ea",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "36ac0210-d3d6-4c00-aa2a-81d77a8b5494",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "765d43f4-24ef-49f2-ae20-24eef6594c47",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "668865f9-db7f-4c3f-a5ca-3205532f294b",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "7fa5d179-f9f8-478f-9a99-faf1edd67f61",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "abf9c0e8-742e-4357-93c7-96a12051dc69",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "390ce5f2-a79b-42d6-967c-5075524294db",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "0b2f3399-4e19-45e2-829d-617b797e325b",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "57163129-1269-4aa5-b416-ba343b38c2ec",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "d4846e1e-3f6e-4d91-8c49-c63efdb2b985",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "c7be3c1a-1275-434d-b0e3-675d4d69c69b",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "a2d3264e-785a-419d-ad34-f40869a1723b",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "6ca1b6ef-acd3-4a5e-a113-95e3f762e923",
              "parentUUID": "c9a34f0b-f1ec-45d2-8444-cfdb85011977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "241500e0-c560-4a91-b6e0-9e41a1f34dc3",
            "0ce06b2f-d60a-4408-bd4c-6a7ebea0822b",
            "86deb070-4259-4605-8f31-2acefce5f354",
            "d82328e1-09a0-4b95-8e7b-0d3bb6f17836",
            "256a1ec0-735c-4687-8605-6818aef3e35a",
            "4f5c12fd-26f8-4cc6-bbd5-36d076bac3ea",
            "36ac0210-d3d6-4c00-aa2a-81d77a8b5494",
            "765d43f4-24ef-49f2-ae20-24eef6594c47",
            "668865f9-db7f-4c3f-a5ca-3205532f294b",
            "7fa5d179-f9f8-478f-9a99-faf1edd67f61",
            "abf9c0e8-742e-4357-93c7-96a12051dc69",
            "390ce5f2-a79b-42d6-967c-5075524294db",
            "0b2f3399-4e19-45e2-829d-617b797e325b",
            "57163129-1269-4aa5-b416-ba343b38c2ec",
            "d4846e1e-3f6e-4d91-8c49-c63efdb2b985",
            "c7be3c1a-1275-434d-b0e3-675d4d69c69b",
            "a2d3264e-785a-419d-ad34-f40869a1723b",
            "6ca1b6ef-acd3-4a5e-a113-95e3f762e923"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "55e43696-80fe-43fa-9d4a-31a27e4a924f",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/utilities.cy.js",
      "file": "cypress/e2e/2-advanced-examples/utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29537b04-3af1-4c0e-aac9-454f396589b4",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1556,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "1e823636-257d-4c47-b0e3-259478a97401",
              "parentUUID": "29537b04-3af1-4c0e-aac9-454f396589b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "746897c8-0c6b-44d4-abe9-42b712976808",
              "parentUUID": "29537b04-3af1-4c0e-aac9-454f396589b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    });\n    // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "8e4cc78d-ba76-4092-a7d9-5e2045b19be9",
              "parentUUID": "29537b04-3af1-4c0e-aac9-454f396589b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "317b177d-80de-467b-9d4b-b75a32675c30",
              "parentUUID": "29537b04-3af1-4c0e-aac9-454f396589b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1392,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true;\n      // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "1c77b499-840b-4d1d-93f8-d67d0411abaa",
              "parentUUID": "29537b04-3af1-4c0e-aac9-454f396589b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e823636-257d-4c47-b0e3-259478a97401",
            "746897c8-0c6b-44d4-abe9-42b712976808",
            "8e4cc78d-ba76-4092-a7d9-5e2045b19be9",
            "317b177d-80de-467b-9d4b-b75a32675c30",
            "1c77b499-840b-4d1d-93f8-d67d0411abaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4c04043-7f29-4de5-af80-0065eaa2f34c",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/viewport.cy.js",
      "file": "cypress/e2e/2-advanced-examples/viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f5964cc-17f6-4e9c-a3f2-f1f54f938892",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "736f537f-63d2-47ff-9a6f-00f7cbd929aa",
              "parentUUID": "1f5964cc-17f6-4e9c-a3f2-f1f54f938892",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "736f537f-63d2-47ff-9a6f-00f7cbd929aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0484472e-3ce8-4720-a44f-1261695b58af",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/waiting.cy.js",
      "file": "cypress/e2e/2-advanced-examples/waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09991be0-37a5-4ab4-b06a-380806cbddae",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5267,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "f34b3475-654b-48d0-a774-d904fa2c052e",
              "parentUUID": "09991be0-37a5-4ab4-b06a-380806cbddae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "5b35542d-dc57-4a1f-b97f-161d9a36fc43",
              "parentUUID": "09991be0-37a5-4ab4-b06a-380806cbddae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f34b3475-654b-48d0-a774-d904fa2c052e",
            "5b35542d-dc57-4a1f-b97f-161d9a36fc43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28108c2b-3a79-4abe-8d93-bddc94f0fc7d",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/window.cy.js",
      "file": "cypress/e2e/2-advanced-examples/window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c6a7031-4538-45c5-99de-0395b1a16f69",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 1805,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "edcb4e85-205c-477f-9bb2-b984f727cf25",
              "parentUUID": "0c6a7031-4538-45c5-99de-0395b1a16f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "9e32453c-4da5-4482-930c-91c7f5fe0286",
              "parentUUID": "0c6a7031-4538-45c5-99de-0395b1a16f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 445,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "46f3bc09-9442-463c-ae4b-93507aa05c2d",
              "parentUUID": "0c6a7031-4538-45c5-99de-0395b1a16f69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edcb4e85-205c-477f-9bb2-b984f727cf25",
            "9e32453c-4da5-4482-930c-91c7f5fe0286",
            "46f3bc09-9442-463c-ae4b-93507aa05c2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1ad3a565-08d5-495c-a52b-3907abefd124",
      "title": "",
      "fullFile": "cypress/e2e/1-getting-started/todo.cy.js",
      "file": "cypress/e2e/1-getting-started/todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6da46c60-6503-4f20-b77d-6e071d6c120d",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 1042,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "5c87f463-9df1-4ef5-8a0e-c176ffbcea03",
              "parentUUID": "6da46c60-6503-4f20-b77d-6e071d6c120d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "fee8da61-4e04-48cb-988f-eb1e873b420a",
              "parentUUID": "6da46c60-6503-4f20-b77d-6e071d6c120d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "0fe922da-2773-451f-850e-c10d0fe250b7",
              "parentUUID": "6da46c60-6503-4f20-b77d-6e071d6c120d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3f89b355-739f-4cc8-b603-3a7aa3b10f68",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 358,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "3439ef73-5f17-4304-8df4-5bc67420e505",
                  "parentUUID": "3f89b355-739f-4cc8-b603-3a7aa3b10f68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 618,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "c8bd45bd-a9e8-457a-9147-705dea568eb0",
                  "parentUUID": "3f89b355-739f-4cc8-b603-3a7aa3b10f68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 337,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "44d1be1e-d811-4fdc-b0c1-f589cc3d7645",
                  "parentUUID": "3f89b355-739f-4cc8-b603-3a7aa3b10f68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3439ef73-5f17-4304-8df4-5bc67420e505",
                "c8bd45bd-a9e8-457a-9147-705dea568eb0",
                "44d1be1e-d811-4fdc-b0c1-f589cc3d7645"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1313,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "5c87f463-9df1-4ef5-8a0e-c176ffbcea03",
            "fee8da61-4e04-48cb-988f-eb1e873b420a",
            "0fe922da-2773-451f-850e-c10d0fe250b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6322c689-0bb5-4be3-aec2-c3f33dc86d72",
      "title": "",
      "fullFile": "cypress/e2e/3-free-range-testers-web/home.cy.js",
      "file": "cypress/e2e/3-free-range-testers-web/home.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
          "title": "Test for wwww.freerangetesters.com",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should first basics web elements",
              "fullTitle": "Test for wwww.freerangetesters.com should first basics web elements",
              "timedOut": null,
              "duration": 9756,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.title().should('include', 'Free Range Testers');\ncy.get('#comp-l02x1m8d4label').click();\ncy.xpath('//*[@id=\"comp-l02x1m8d3\"]/a/div/div').click();\ncy.contains('Iniciar');",
              "err": {},
              "uuid": "93d926ba-af37-4cd9-a5d7-e8d0037b57ed",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be using locators for example",
              "fullTitle": "Test for wwww.freerangetesters.com should be using locators for example",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7');\n// filters\n// cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7:enable') // filtrar boton habilitado\n// cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7:disabled') // filtrar boton desahabilitado\n// cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7:checked') // filtrar chebox, radio button checkado o seleccion\n// cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7:empty') // filtrar elementos sin hijos en el html o elementos vacios\n// cy.get('#comp-krjaw4p > [data-testid=\"\"linkELement\"] > .?1Qjd7:visible') // filtrar elemento visible",
              "err": {},
              "uuid": "a80ad2b3-10ad-4bb3-a56f-67571f6ac66a",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to courses and check amount of course available is going to be 12",
              "fullTitle": "Test for wwww.freerangetesters.com should navigate to courses and check amount of course available is going to be 12",
              "timedOut": null,
              "duration": 5113,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#comp-l02x1m8d2label').click();\ncy.get('[data-testid=\"linkElement\"] > .M3I7Z2').should('have.length', 12);",
              "err": {},
              "uuid": "af2def6b-b904-4849-92bc-693e9a63166d",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find contactanos form field name with class has-custom-focus",
              "fullTitle": "Test for wwww.freerangetesters.com should find contactanos form field name with class has-custom-focus",
              "timedOut": null,
              "duration": 3509,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#input_comp-l1ed927d').should('have.class', 'has-custom-focus');",
              "err": {},
              "uuid": "e7396b11-e119-4006-bfbf-bee928751dfe",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find a link blog on the navigation bar",
              "fullTitle": "Test for wwww.freerangetesters.com should find a link blog on the navigation bar",
              "timedOut": null,
              "duration": 2138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#comp-l02x1m8d1label').should('have.text', 'Blog');\n// cy.get('#comp-l02x1m8d1label').should('have.value', 'some specific value') for checking specific values",
              "err": {},
              "uuid": "d80404b0-df70-40ac-b71a-70f031a9dc37",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be a button with content Empeza a aprender",
              "fullTitle": "Test for wwww.freerangetesters.com should be a button with content Empeza a aprender",
              "timedOut": null,
              "duration": 7355,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// using aliasfor cleaner test\ncy.get('#comp-krjarw4p > [data-testid=\"linkElement\"] > .M3I7Z2').as('btnStartLearn');\ncy.get('btnStartLearn').should('exist');\ncy.get('btnStartLearn').should('be.visible');\ncy.get('btnStartLearn').should('have.text', 'EmpezÃ¡ a aprender!');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `btnStartLearn`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `btnStartLearn`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/3-free-range-testers-web/home.cy.js:40:32)",
                "diff": null
              },
              "uuid": "031781ec-c1dc-413f-ab06-d59af50f1f35",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if some checkbox is disabled and checked",
              "fullTitle": "Test for wwww.freerangetesters.com should check if some checkbox is disabled and checked",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('').should('be.disabled');\ncy.get('').should('be.checked');",
              "err": {},
              "uuid": "954a275c-7992-4ac8-ad80-717a34deb1b8",
              "parentUUID": "bdc926ff-688c-4a01-a5f0-1d5d8007dde2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93d926ba-af37-4cd9-a5d7-e8d0037b57ed",
            "af2def6b-b904-4849-92bc-693e9a63166d",
            "e7396b11-e119-4006-bfbf-bee928751dfe",
            "d80404b0-df70-40ac-b71a-70f031a9dc37"
          ],
          "failures": [
            "031781ec-c1dc-413f-ab06-d59af50f1f35"
          ],
          "pending": [
            "a80ad2b3-10ad-4bb3-a56f-67571f6ac66a",
            "954a275c-7992-4ac8-ad80-717a34deb1b8"
          ],
          "skipped": [],
          "duration": 27871,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d2e4758f-1e58-4c99-8690-861ad9f3b7e7",
      "title": "",
      "fullFile": "cypress/e2e/3-free-range-testers-web/secctions.cy.js",
      "file": "cypress/e2e/3-free-range-testers-web/secctions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99a1f052-eb68-4869-8dc4-650046abd890",
          "title": "Test diferents tabs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check title page from www.freerangetesters.com/home",
              "fullTitle": "Test diferents tabs should check title page from www.freerangetesters.com/home",
              "timedOut": null,
              "duration": 3682,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${page.location}`);\ncy.title().should('include', `${page.title}`);",
              "err": {},
              "uuid": "74de21d5-6343-4067-8624-878cfa73bed6",
              "parentUUID": "99a1f052-eb68-4869-8dc4-650046abd890",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check title page from www.freerangetesters.com/blog",
              "fullTitle": "Test diferents tabs should check title page from www.freerangetesters.com/blog",
              "timedOut": null,
              "duration": 2465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${page.location}`);\ncy.title().should('include', `${page.title}`);",
              "err": {},
              "uuid": "234b2d6a-6085-4e5d-a9c1-017fabd2327c",
              "parentUUID": "99a1f052-eb68-4869-8dc4-650046abd890",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check title page from www.freerangetesters.com/cursos",
              "fullTitle": "Test diferents tabs should check title page from www.freerangetesters.com/cursos",
              "timedOut": null,
              "duration": 2765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${page.location}`);\ncy.title().should('include', `${page.title}`);",
              "err": {},
              "uuid": "9ed80225-81b5-4f78-9562-42a24dec87cc",
              "parentUUID": "99a1f052-eb68-4869-8dc4-650046abd890",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check title page from www.freerangetesters.com/podcast",
              "fullTitle": "Test diferents tabs should check title page from www.freerangetesters.com/podcast",
              "timedOut": null,
              "duration": 2788,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${page.location}`);\ncy.title().should('include', `${page.title}`);",
              "err": {},
              "uuid": "5c2ad94d-4371-4857-9baa-3ce6e6354eb1",
              "parentUUID": "99a1f052-eb68-4869-8dc4-650046abd890",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check title page from www.freerangetesters.com/conocenos",
              "fullTitle": "Test diferents tabs should check title page from www.freerangetesters.com/conocenos",
              "timedOut": null,
              "duration": 3348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${page.location}`);\ncy.title().should('include', `${page.title}`);",
              "err": {},
              "uuid": "9205842e-82ed-4f50-9f20-cc127351905a",
              "parentUUID": "99a1f052-eb68-4869-8dc4-650046abd890",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74de21d5-6343-4067-8624-878cfa73bed6",
            "234b2d6a-6085-4e5d-a9c1-017fabd2327c",
            "9ed80225-81b5-4f78-9562-42a24dec87cc",
            "5c2ad94d-4371-4857-9baa-3ce6e6354eb1",
            "9205842e-82ed-4f50-9f20-cc127351905a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5637348d-aad4-418d-a48b-be7b497c1c4f",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/assertions.cy.js",
      "file": "cypress/e2e/4-Site-test/assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3301438c-8f42-4e28-8e67-8fab52ee1ad6",
          "title": "Assertions ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should make implicit validations",
              "fullTitle": "Assertions  should make implicit validations",
              "timedOut": null,
              "duration": 3929,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Uso de should y el and\ncy.contains('Inputs').click();\ncy.get('h3').should('have.text', 'Inputs');\ncy.get('.example').and('have.class', 'example');\ncy.get('.example').should('have.class', 'example').and('be.visible');",
              "err": {},
              "uuid": "340ee9a1-74d2-4730-80aa-9e828cdcf7c1",
              "parentUUID": "3301438c-8f42-4e28-8e67-8fab52ee1ad6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should make implicit validations",
              "fullTitle": "Assertions  should make implicit validations",
              "timedOut": null,
              "duration": 770,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// USA VALIDACIONES EXPLICITAS DE CHAI\ncy.contains('Inputs').click();\ncy.get('h3');\n// cy.get('.example')\nexpect('Inputs').to.equal('Inputs');\nexpect('h3').to.exist;\nexpect('.example').to.exist;",
              "err": {},
              "uuid": "24c35d8f-187f-406f-8ca3-0057db965529",
              "parentUUID": "3301438c-8f42-4e28-8e67-8fab52ee1ad6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validation using promises",
              "fullTitle": "Assertions  should validation using promises",
              "timedOut": null,
              "duration": 1310,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let waited = false;\nfunction waitOneSecond() {\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      waited = true;\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.wrap(null).then(() => {\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "fcf67575-5f8b-41f0-9132-3752ff43df2c",
              "parentUUID": "3301438c-8f42-4e28-8e67-8fab52ee1ad6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "340ee9a1-74d2-4730-80aa-9e828cdcf7c1",
            "24c35d8f-187f-406f-8ca3-0057db965529",
            "fcf67575-5f8b-41f0-9132-3752ff43df2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6009,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15b410c1-22c7-4fda-9c63-e7a479263302",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/commands-ui.cy.js",
      "file": "cypress/e2e/4-Site-test/commands-ui.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb932da7-b989-4af0-930d-7faca2d49022",
          "title": "UI Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should click Add/Remove Elements and click on addElement and check delete btn",
              "fullTitle": "UI Test should click Add/Remove Elements and click on addElement and check delete btn",
              "timedOut": null,
              "duration": 2472,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Add/Remove Elements').click();\ncy.get('button').click();\ncy.get('.added-manually').should('be.visible');\ncy.get('.added-manually').click();",
              "err": {},
              "uuid": "d7f2535f-ac1e-4361-a6a6-9ef5711d39f6",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click login success and redirect to secure url",
              "fullTitle": "UI Test should click login success and redirect to secure url",
              "timedOut": null,
              "duration": 2181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Form Authentication').click();\ncy.get('#username').type('tomsmith');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('.radius').click();",
              "err": {},
              "uuid": "663514df-7f22-4b0f-b2bb-26afe3d12289",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check the checkboxes",
              "fullTitle": "UI Test should check the checkboxes",
              "timedOut": null,
              "duration": 7032,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Checkboxes').click();\ncy.get('#checkboxes > :nth-child(1)').click();\ncy.wait(3000);\ncy.get('#checkboxes > :nth-child(1)').click();\ncy.wait(3000);\ncy.get('#checkboxes > :nth-child(1)').check(); // chequeo el checkbox con el metodo check\ncy.get('#checkboxes > :nth-child(3)').uncheck();",
              "err": {},
              "uuid": "edd25756-07ff-4f69-b391-eaffa2d7f8d1",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test select",
              "fullTitle": "UI Test should test select",
              "timedOut": null,
              "duration": 3906,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Dropdown').click();\ncy.get('#dropdown').select('Option 2'); // seleccionar por el value\ncy.wait(3000);\ncy.get('#dropdown').select(1); // selecciona la opcion por el indice",
              "err": {},
              "uuid": "439b51cc-220d-4f78-bd7a-3dd53e58f1e3",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test hovers with click and redirections",
              "fullTitle": "UI Test should test hovers with click and redirections",
              "timedOut": null,
              "duration": 842,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Hovers').click();\n// ELEMENTO INVISIBLE vamos por el selector y con opcion force en el click hacemos que clikee el elemento si o si\ncy.get('#content > div > div:nth-child(4) > div > a').click({\n  force: true\n});",
              "err": {},
              "uuid": "87ef939b-eaf4-412e-b435-d8dc208a65f9",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test rigth click",
              "fullTitle": "UI Test should test rigth click",
              "timedOut": null,
              "duration": 833,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Context Menu').click();\n// Metodo 1 si para aplicar click derecho\ncy.get('#hot-spot').rightclick();\n// Metodo 2 para aplicar click derecho\ncy.get('#hot-spot').invoke('trigger', 'contextmenu'); // el contextMenu es la funcion que despliegua el click derecho\ncy.on('window:alert', alert => {\n  expect(alert).to.equal('You selected a context menu');\n});",
              "err": {},
              "uuid": "f46d69b1-44ad-4b78-846e-5b324a2e5844",
              "parentUUID": "bb932da7-b989-4af0-930d-7faca2d49022",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7f2535f-ac1e-4361-a6a6-9ef5711d39f6",
            "663514df-7f22-4b0f-b2bb-26afe3d12289",
            "edd25756-07ff-4f69-b391-eaffa2d7f8d1",
            "439b51cc-220d-4f78-bd7a-3dd53e58f1e3",
            "87ef939b-eaf4-412e-b435-d8dc208a65f9",
            "f46d69b1-44ad-4b78-846e-5b324a2e5844"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "659ad09a-01b6-45d3-967b-03233480bb03",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/debugging.cy.js",
      "file": "cypress/e2e/4-Site-test/debugging.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3c916dd-d0fc-46c2-8ff9-a00041efbe0c",
          "title": "Utilities debugg",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should cy.log utility",
              "fullTitle": "Utilities debugg should cy.log utility",
              "timedOut": null,
              "duration": 7116,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('tomsmith');\ncy.get('#password').type('SuperSecretPassword!');\ncy.log('se lleno todo el formulario');\ncy.get('form').contains('Login').click();\ncy.url().should('contains', '/secure');\ncy.wait(3000);\ncy.get('.button').click();\ncy.url().should('contains', '/login');",
              "err": {},
              "uuid": "f73532a3-cfaf-47b2-9f5d-3b15a2db0e15",
              "parentUUID": "b3c916dd-d0fc-46c2-8ff9-a00041efbe0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cy.pause utility",
              "fullTitle": "Utilities debugg should cy.pause utility",
              "timedOut": null,
              "duration": 4961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// TODO: el pause() permite manipular los steps en el runner para controlar y ver como van ejecutando los test correctamente\ncy.get('#username').type('tomsmith').pause();\ncy.get('#password').pause().type('SuperSecretPassword!');\ncy.log('se lleno todo el formulario');\ncy.get('form').contains('Login').click();\ncy.url().should('contains', '/secure').pause();\ncy.wait(3000);\ncy.get('.button').click();\ncy.url().should('contains', '/login');",
              "err": {},
              "uuid": "046dee8e-1640-49b3-8a33-440951de8813",
              "parentUUID": "b3c916dd-d0fc-46c2-8ff9-a00041efbe0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cy.debug utility",
              "fullTitle": "Utilities debugg should cy.debug utility",
              "timedOut": null,
              "duration": 4821,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// TODO: el debug() tras reiniciar el test en la consola del Runner de cypress se pueden ver detalles de lo seleccionado\ncy.get('#username').type('tomsmith');\ncy.get('#password').debug().type('SuperSecretPassword!');\ncy.log('se lleno todo el formulario');\ncy.get('form').contains('Login').click();\ncy.url().should('contains', '/secure');\ncy.wait(3000);\ncy.get('.button').click();\ncy.url().should('contains', '/login');",
              "err": {},
              "uuid": "b2a13bf6-95c6-4dc2-972e-0f01ed5a7812",
              "parentUUID": "b3c916dd-d0fc-46c2-8ff9-a00041efbe0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f73532a3-cfaf-47b2-9f5d-3b15a2db0e15",
            "046dee8e-1640-49b3-8a33-440951de8813",
            "b2a13bf6-95c6-4dc2-972e-0f01ed5a7812"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16898,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e7228a42-2cd0-45ed-af4e-0438c22d694c",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/example-fixtures.cy.js",
      "file": "cypress/e2e/4-Site-test/example-fixtures.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3422d5e0-dc5f-4524-abd2-04da71212275",
          "title": "Using fixtures",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate login using form",
              "fullTitle": "Using fixtures should validate login using form",
              "timedOut": null,
              "duration": 3738,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = userDataFix;\ncy.get('#username').type(`${username}`);\ncy.get('#password').type(`${password}`);\ncy.get('.radius').click();\ncy.get('.subheader').should('include.text', 'Welcome');",
              "err": {},
              "uuid": "bed56fd1-0afc-4b6c-bbf6-60da3abefed9",
              "parentUUID": "3422d5e0-dc5f-4524-abd2-04da71212275",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bed56fd1-0afc-4b6c-bbf6-60da3abefed9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3738,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "71197e4f-7d4f-49be-9235-3d1624c004f8",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/session.cy.js",
      "file": "cypress/e2e/4-Site-test/session.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c1e1159-e12f-40bb-9c43-03eaa71e199c",
          "title": "should check session and cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should make login without session",
              "fullTitle": "should check session and cookies should make login without session",
              "timedOut": null,
              "duration": 3274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('tomsmith');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('form').contains('Login').click();\ncy.url().should('contain', '/secure');",
              "err": {},
              "uuid": "c15c9f7a-9c81-4843-8906-14750d0e6b04",
              "parentUUID": "1c1e1159-e12f-40bb-9c43-03eaa71e199c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should make login using session from cypress and checking all the cookies generated by default",
              "fullTitle": "should check session and cookies should make login using session from cypress and checking all the cookies generated by default",
              "timedOut": null,
              "duration": 4961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.session('tom', () => {\n  cy.visit('https://the-internet.herokuapp.com/login');\n  cy.wait(3000);\n  cy.get('#username').type('tomsmith');\n  cy.get('#password').type('SuperSecretPassword!');\n  cy.get('form').contains('Login').click();\n  cy.url().should('contain', '/secure');\n  cy.getCookies().should('have.length', 5).then(cookie => {\n    expect(cookie[0]).to.have.property('name', 'optimizelyPendingLogEvents');\n    expect(cookie[1]).to.have.property('name', 'optimizelySegments');\n    expect(cookie[2]).to.have.property('name', 'optimizelyEndUserId');\n    expect(cookie[3]).to.have.property('name', 'optimizelyBuckets');\n    expect(cookie[4]).to.have.property('name', 'rack.session');\n  });\n  // limpio y valido que no existan cookies\n  cy.clearCookies();\n  cy.getCookies().should('have.length', 0);\n});",
              "err": {},
              "uuid": "bfc8e3e2-9417-4376-bec9-968193dd741c",
              "parentUUID": "1c1e1159-e12f-40bb-9c43-03eaa71e199c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should make login using session from cypress and checking an specific cookies ",
              "fullTitle": "should check session and cookies should make login using session from cypress and checking an specific cookies ",
              "timedOut": null,
              "duration": 4749,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.session('RFV', () => {\n  cy.visit('https://the-internet.herokuapp.com/login');\n  cy.wait(3000);\n  cy.get('#username').type('tomsmith');\n  cy.get('#password').type('SuperSecretPassword!');\n  cy.get('form').contains('Login').click();\n  cy.url().should('contain', '/secure');\n  cy.getCookie('optimizelyPendingLogEvents').should('exist');\n  // esta cookie siempre cambia, ya que es dinamica\n  cy.getCookie('optimizelyPendingLogEvents').should('not.have.property', 'value', '%5B%22n%3Dhttps%253A%252F%252Fthe-internet.herokuapp.com%252Fsecure%26u%3Doeu1678091720807r0.22324146037381642%26wxhr%3Dtrue%26t%3D1678091725165%26f%3D298349752%2C318188263%22%2C%22n%3Dengagement%26g%3D298283957%26u%3Doeu1678091720807r0.22324146037381642%26wxhr%3Dtrue%26t%3D1678091723971%26f%3D298349752%2C318188263%22%2C%22n%3Dhttps%253A%252F%252Fthe-internet.herokuapp.com%252Flogin%26u%3Doeu1678091720807r0.22324146037381642%26wxhr%3Dtrue%26t%3D1678091720810%26f%3D298349752%2C318188263%22%5D');\n  cy.getCookie('optimizelyPendingLogEvents').should('not.be.null');\n  // limpia una cookie especifica y luego validamos que esta vacia\n  cy.clearCookie('optimizelyBuckets');\n  cy.getCookie('optimizelyBuckets').should('be.null');\n});",
              "err": {},
              "uuid": "579766f4-dd2c-4698-b95a-a0a0927c01c8",
              "parentUUID": "1c1e1159-e12f-40bb-9c43-03eaa71e199c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should make login without session at SET SOME COOKIES",
              "fullTitle": "should check session and cookies should make login without session at SET SOME COOKIES",
              "timedOut": null,
              "duration": 1280,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('tomsmith');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('form').contains('Login').click();\ncy.url().should('contain', '/secure');\ncy.setCookie('CookieCheck', 'testCookie');\ncy.getCookie('CookieCheck').should('have.property', 'value', 'testCookie');",
              "err": {},
              "uuid": "3024f811-9669-4a19-9053-e4f8abba7148",
              "parentUUID": "1c1e1159-e12f-40bb-9c43-03eaa71e199c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c15c9f7a-9c81-4843-8906-14750d0e6b04",
            "bfc8e3e2-9417-4376-bec9-968193dd741c",
            "579766f4-dd2c-4698-b95a-a0a0927c01c8",
            "3024f811-9669-4a19-9053-e4f8abba7148"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14264,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ceabe5ef-9069-4c9f-a5ab-7f6031da78e6",
      "title": "",
      "fullFile": "cypress/e2e/4-Site-test/ui-help.cy.js",
      "file": "cypress/e2e/4-Site-test/ui-help.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b20e7b0-5c1e-4339-b845-6d60d0e8688a",
          "title": "Should test UI",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should use multiple windows, this test include redirections with some workaround",
              "fullTitle": "Should test UI should use multiple windows, this test include redirections with some workaround",
              "timedOut": null,
              "duration": 2551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Multiple Windows').click();\n// TODO: Agregando el invoke con el remoteAttr y el target evitamos que se abra una pestana nueva del navegador ya que cypress solo valida la pagina del runner\ncy.contains('Click Here').invoke('removeAttr', 'target').click();\ncy.contains('New Window').should('have.text', 'New Window'); // sino se elimina el target el test falla ya que no encontrara este comportamiento en la misma pagina del runner",
              "err": {},
              "uuid": "25feaccf-7b1e-4781-9d5e-9e09db1f27d8",
              "parentUUID": "3b20e7b0-5c1e-4339-b845-6d60d0e8688a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use Shadow DOM",
              "fullTitle": "Should test UI should use Shadow DOM",
              "timedOut": null,
              "duration": 671,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Shadow DOM').click();\n// TODO: if the web component is another branch of the doom use shadow, if not is correct is going to give and error\n// cy.get('ul > :nth-child(2)').shadow().should('have.text', 'In a list!')\ncy.get('ul > :nth-child(2)').should('have.text', 'In a list!');",
              "err": {},
              "uuid": "ff804bcc-427c-47b3-ab4a-865eec8f5136",
              "parentUUID": "3b20e7b0-5c1e-4339-b845-6d60d0e8688a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get first and alst element",
              "fullTitle": "Should test UI should get first and alst element",
              "timedOut": null,
              "duration": 963,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Dynamic Content').click();\ncy.get('img').first().should('be.visible'); // toma el 1ro\ncy.get('img').eq(2).should('be.visible'); // evalua la posicion entre 0 y n-1\ncy.get('img').last().should('be.visible'); // toma el 2do",
              "err": {},
              "uuid": "faaee58b-6894-4680-b6ea-9d284aa978de",
              "parentUUID": "3b20e7b0-5c1e-4339-b845-6d60d0e8688a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use parent and children",
              "fullTitle": "Should test UI should use parent and children",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Dynamic Content').click();\ncy.get(':nth-child(4) > .large-2 > img').parent(); // retorma el elemento padre de este elemento en el DOM\ncy.get('.example > :nth-child(7)').children(); // retorma el elemento hijo de este elemento en el DOM",
              "err": {},
              "uuid": "d75143f0-f334-45da-a141-52a267d513d2",
              "parentUUID": "3b20e7b0-5c1e-4339-b845-6d60d0e8688a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25feaccf-7b1e-4781-9d5e-9e09db1f27d8",
            "ff804bcc-427c-47b3-ab4a-865eec8f5136",
            "faaee58b-6894-4680-b6ea-9d284aa978de",
            "d75143f0-f334-45da-a141-52a267d513d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12218220-d2c9-4e19-bd55-6ab9e5b57d2d",
      "title": "",
      "fullFile": "cypress/e2e/5-tables/tables.cy.js",
      "file": "cypress/e2e/5-tables/tables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06db8aa4-1d74-4a7d-9ea0-d62d69998da0",
          "title": "dynamic and static tables",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validation static table",
              "fullTitle": "dynamic and static tables should validation static table",
              "timedOut": null,
              "duration": 1864,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// busca el td de la tabla con el valor que nos interesa, luego va hacia la columna anterior que es un check donde busca el input y lo chequea\n// cy.get('.col-md-9 > :nth-child(8)')\ncy.contains('td', 'Mark').next().should('have.text', 'Otto');\ncy.contains('td', 'Jacob').prev().should('have.text', '2');\ncy.contains('td', 'Jacob').next().next().should('have.text', '@fat');",
              "err": {},
              "uuid": "33f10a2d-ad87-4162-b7e1-18811b047e57",
              "parentUUID": "06db8aa4-1d74-4a7d-9ea0-d62d69998da0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33f10a2d-ad87-4162-b7e1-18811b047e57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1864,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "242ad706-6d60-4178-8b52-d578cdd42678",
      "title": "",
      "fullFile": "cypress/e2e/6-apis/apis.cy.js",
      "file": "cypress/e2e/6-apis/apis.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
          "title": "Should use cypress for test API endpoints",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should obtained a status 200 for posts GET endpoint",
              "fullTitle": "Should use cypress for test API endpoints should obtained a status 200 for posts GET endpoint",
              "timedOut": null,
              "duration": 935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts'\n}).then(res => {\n  expect(res.status).to.eq(200);\n}).its('body').should('have.length', 100);",
              "err": {},
              "uuid": "393a1541-cbf0-4c65-bd3f-97881a628d1d",
              "parentUUID": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should obtained a status 200 for posts with id 10 GET endpoint",
              "fullTitle": "Should use cypress for test API endpoints should obtained a status 200 for posts with id 10 GET endpoint",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: 'https://jsonplaceholder.typicode.com/posts/10'\n}).then(res => {\n  expect(res.status).to.eq(200);\n}).its('body').then(res => {\n  expect(res).to.deep.eq({\n    \"userId\": 1,\n    \"id\": 10,\n    \"title\": \"optio molestias id quia eum\",\n    \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n  });\n});",
              "err": {},
              "uuid": "ebfc739a-ada5-4a5c-93c6-b5088a3d4e31",
              "parentUUID": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should obtained a status 201 for posts POST endpoint after being created",
              "fullTitle": "Should use cypress for test API endpoints should obtained a status 201 for posts POST endpoint after being created",
              "timedOut": null,
              "duration": 524,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// USANDO EL DEBUG PUEDO VER QUE ENVIA EL REQUEST Y Q RESPONDE COLOCANDOLO LUEGO DEL REQUEST\ncy.request({\n  method: 'POST',\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  body: {\n    userId: 1,\n    title: 'titulo de prueba',\n    description: 'descripcion de prueba',\n    body: 'body de prueba'\n  }\n}).then(res => {\n  expect(res.body).to.have.property('title', 'titulo de prueba');\n  expect(res.body).to.have.property('description', 'descripcion de prueba');\n  expect(res.body).to.have.property('body', 'body de prueba');\n  expect(res.body).to.have.property('id');\n  expect(res.status).to.eq(201);\n  expect(res.statusText).to.eq('Created');\n  expect(res.body).to.deep.eq({\n    \"userId\": 1,\n    \"title\": \"titulo de prueba\",\n    \"description\": \"descripcion de prueba\",\n    \"body\": \"body de prueba\",\n    \"id\": 101\n  });\n});",
              "err": {},
              "uuid": "6a58401c-060a-4b29-997c-8b2afb475328",
              "parentUUID": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should obtained a status 200 for post with id 2 PUT endpoint",
              "fullTitle": "Should use cypress for test API endpoints should obtained a status 200 for post with id 2 PUT endpoint",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// USANDO EL DEBUG PUEDO VER QUE ENVIA EL REQUEST Y Q RESPONDE\ncy.request({\n  method: 'PUT',\n  url: 'https://jsonplaceholder.typicode.com/posts/2',\n  body: {\n    title: 'titulo de prueba',\n    description: 'descripcion de prueba'\n  }\n}).then(res => {\n  expect(res.body).to.have.property('title', 'titulo de prueba');\n  expect(res.body).to.have.property('description', 'descripcion de prueba');\n  expect(res.status).to.eq(200);\n  expect(res.statusText).to.eq('OK');\n  expect(res.body).to.deep.eq({\n    \"title\": \"titulo de prueba\",\n    \"description\": \"descripcion de prueba\",\n    \"id\": 2\n  });\n});",
              "err": {},
              "uuid": "e767a7ea-d9af-4726-b74f-46ea48853f3b",
              "parentUUID": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should obtained a status 200 for post with id 2 DELETE endpoint",
              "fullTitle": "Should use cypress for test API endpoints should obtained a status 200 for post with id 2 DELETE endpoint",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// USANDO EL DEBUG PUEDO VER QUE ENVIA EL REQUEST Y Q RESPONDE\ncy.request('DELETE', 'https://jsonplaceholder.typicode.com/posts/1').then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.statusText).to.eq('OK');\n});",
              "err": {},
              "uuid": "f41ae448-db8d-4628-9a0d-81db0b27490f",
              "parentUUID": "76b0f21e-dabc-4e00-9359-1c4d149514d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "393a1541-cbf0-4c65-bd3f-97881a628d1d",
            "ebfc739a-ada5-4a5c-93c6-b5088a3d4e31",
            "6a58401c-060a-4b29-997c-8b2afb475328",
            "e767a7ea-d9af-4726-b74f-46ea48853f3b",
            "f41ae448-db8d-4628-9a0d-81db0b27490f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2a306e6-51a6-41ae-8349-0c54c574ff81",
      "title": "",
      "fullFile": "cypress/e2e/6-apis/examples-e2e.cy.js",
      "file": "cypress/e2e/6-apis/examples-e2e.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e605aa88-c9b2-4618-aa76-9a79ee563ed2",
          "title": "should login/logout basic Auth with modal and form",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should can login using alert for input data",
              "fullTitle": "should login/logout basic Auth with modal and form should can login using alert for input data",
              "timedOut": null,
              "duration": 2407,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/basic_auth', {\n  auth: {\n    username: 'admin',\n    password: 'admin'\n  }\n});\n// cy.contains('Basic Auth').click()\ncy.get('p').should('include.text', 'Congratulations');",
              "err": {},
              "uuid": "06b6bc00-ad37-45af-af7c-625d21585149",
              "parentUUID": "e605aa88-c9b2-4618-aa76-9a79ee563ed2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should can login using with a login form",
              "fullTitle": "should login/logout basic Auth with modal and form should can login using with a login form",
              "timedOut": null,
              "duration": 1860,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/login');\ncy.get('#username').type('tomsmith');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('.radius').click();\ncy.get('.subheader').should('include.text', 'Welcome');",
              "err": {},
              "uuid": "2b95d0b1-9cb9-4948-bb4e-234d0cddb232",
              "parentUUID": "e605aa88-c9b2-4618-aa76-9a79ee563ed2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should send request to authenticate endpoint with forms data and get login sucessfully",
              "fullTitle": "should login/logout basic Auth with modal and form should send request to authenticate endpoint with forms data and get login sucessfully",
              "timedOut": null,
              "duration": 1290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/login');\ncy.request({\n  method: 'POST',\n  url: 'https://the-internet.herokuapp.com/authenticate',\n  form: true,\n  body: {\n    username: 'tomsmith',\n    password: 'SuperSecretPassword!'\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.statusText).to.eq('OK');\n});\ncy.getCookie('rack.session').should('exist');\ncy.visit('https://the-internet.herokuapp.com/secure'); // redireccionamos manualmente ya que aqui validamos el request que se hace hacia el backend\ncy.get('.subheader').should('include.text', 'Welcome');",
              "err": {},
              "uuid": "31472572-e695-4e05-81b7-f4d240ee9a74",
              "parentUUID": "e605aa88-c9b2-4618-aa76-9a79ee563ed2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "SAME TEST AS BEFORE BUT WITH COMANDS - should send request to authenticate endpoint with forms data and get login sucessfully",
              "fullTitle": "should login/logout basic Auth with modal and form SAME TEST AS BEFORE BUT WITH COMANDS - should send request to authenticate endpoint with forms data and get login sucessfully",
              "timedOut": null,
              "duration": 1129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login({\n  username: userData.username,\n  password: userData.password\n});\ncy.get('.subheader').should('include.text', 'Welcome');",
              "err": {},
              "uuid": "9e17326a-8e45-45ff-adbc-a3355006a6e2",
              "parentUUID": "e605aa88-c9b2-4618-aa76-9a79ee563ed2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06b6bc00-ad37-45af-af7c-625d21585149",
            "2b95d0b1-9cb9-4948-bb4e-234d0cddb232",
            "31472572-e695-4e05-81b7-f4d240ee9a74",
            "9e17326a-8e45-45ff-adbc-a3355006a6e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10789168-e000-49f5-83fa-a0baa0c57c26",
      "title": "",
      "fullFile": "cypress/e2e/7-iframes/iframes.cy.js",
      "file": "cypress/e2e/7-iframes/iframes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b37f5eb-bd5e-430e-ab78-c8885a6acf05",
          "title": "testing into a iframe",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should ",
              "fullTitle": "testing into a iframe should ",
              "timedOut": null,
              "duration": 1264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://webdriveruniversity.com/IFrame/index.html');\ncy.get('#frame').iframe('body #button-find-out-more > b').should('include.text', 'Find Out More!');\ncy.get('#frame').iframe('body #div-main-nav > div > ul > li:nth-child(2) > a').should('exist').and('include.text', 'Our Products');",
              "err": {},
              "uuid": "2e311050-e481-48eb-8c5d-884bf4fc1014",
              "parentUUID": "2b37f5eb-bd5e-430e-ab78-c8885a6acf05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e311050-e481-48eb-8c5d-884bf4fc1014"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1264,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "37fb0680-becf-4eba-a371-546797a3023b",
      "title": "",
      "fullFile": "cypress/e2e/8-page-object-model/home-page-object-model.cy.js",
      "file": "cypress/e2e/8-page-object-model/home-page-object-model.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
          "title": "Should test home of freerangetesters with Page Object Model",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be a button with content Empeza a aprender WITH POM",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should be a button with content Empeza a aprender WITH POM",
              "timedOut": null,
              "duration": 4384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.startBtn();\nhomePage.startBtn().should('exist');\nhomePage.startBtn().should('be.visible');\nhomePage.startBtn().should('have.text', 'EmpezÃ¡ a aprender!');",
              "err": {},
              "uuid": "789afe7e-dd4f-45af-8c13-dc12558bcfef",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to courses and check amount of course available is going to be 12 WITH POM",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should navigate to courses and check amount of course available is going to be 12 WITH POM",
              "timedOut": null,
              "duration": 3181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.getCursesNavigation().click();\ncy.get('[data-testid=\"linkElement\"] > .M3I7Z2').should('have.length', 12);",
              "err": {},
              "uuid": "dc891a71-efd7-48ad-b2e7-5575d8d59b20",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should first basics web elements WITH POM",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should first basics web elements WITH POM",
              "timedOut": null,
              "duration": 5608,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.getTitle().should('include', 'Free Range Testers');\ncy.get('#comp-l02x1m8d4label').click();\ncy.xpath('//*[@id=\"comp-l02x1m8d3\"]/a/div/div').click();\ncy.contains('Iniciar');",
              "err": {},
              "uuid": "7cf98899-dbde-42c3-a6c7-eb909f26bfd5",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find contactanos form field name with class has-custom-focus WITH POM",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should find contactanos form field name with class has-custom-focus WITH POM",
              "timedOut": null,
              "duration": 3048,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.getContactanosNavigation().should('have.class', 'has-custom-focus');",
              "err": {},
              "uuid": "99e69c52-fbbc-4ec5-8f75-df01d3545c2f",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find a link blog on the navigation bar WITH POM",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should find a link blog on the navigation bar WITH POM",
              "timedOut": null,
              "duration": 2138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.getBlogNavigation().should('have.text', 'Blog');",
              "err": {},
              "uuid": "1b92521f-bfdd-4a52-8451-423f85a83f32",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should first",
              "fullTitle": "Should test home of freerangetesters with Page Object Model should first",
              "timedOut": null,
              "duration": 4805,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);",
              "err": {},
              "uuid": "0700323e-6582-4e41-acd4-69a9ba8c4dfd",
              "parentUUID": "b9dbc8ba-af49-4594-9bd0-594afb487c6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "789afe7e-dd4f-45af-8c13-dc12558bcfef",
            "dc891a71-efd7-48ad-b2e7-5575d8d59b20",
            "7cf98899-dbde-42c3-a6c7-eb909f26bfd5",
            "99e69c52-fbbc-4ec5-8f75-df01d3545c2f",
            "1b92521f-bfdd-4a52-8451-423f85a83f32",
            "0700323e-6582-4e41-acd4-69a9ba8c4dfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "00ba6f4f-193e-46a1-a7d0-f464b9b16dfc",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f4f0204-2253-43f5-98d6-b008ae76f999",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4553,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com')\n// .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}')\n// .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}')\n// Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "807b26a1-5a8d-427d-a49d-a4faf0ee6d86",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "32f9d172-a537-4d47-9da4-aec89c3a715e",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "46f1486f-c590-48ac-8f9a-f3d971ad5ee6",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "0186eaff-f95d-4bb7-92e0-e23b6f01ab2c",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "3c87ce50-0b6e-42d2-a035-906e0002d11e",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "2927e498-3425-47f1-9912-0729a3b0da10",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "f965bbee-adb3-4371-b340-7e1782f2908c",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "1e65557a-5024-4212-821e-c03cd75a3ea2",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "80d5ed19-1a03-4ba4-aca0-0293ebe4b79a",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1062,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "6214e8a9-9a13-471f-b4b6-189dfa488ff4",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas'])\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "6c2cda99-e22a-436a-8c60-bed538a007ab",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "ba23171c-e241-479b-a3fc-5480f40ca793",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "94dec853-33a3-49aa-98ac-106cba640615",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "a2d8d0d6-d707-4e18-bce5-b3a51c978947",
              "parentUUID": "7f4f0204-2253-43f5-98d6-b008ae76f999",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "807b26a1-5a8d-427d-a49d-a4faf0ee6d86",
            "32f9d172-a537-4d47-9da4-aec89c3a715e",
            "46f1486f-c590-48ac-8f9a-f3d971ad5ee6",
            "0186eaff-f95d-4bb7-92e0-e23b6f01ab2c",
            "3c87ce50-0b6e-42d2-a035-906e0002d11e",
            "2927e498-3425-47f1-9912-0729a3b0da10",
            "f965bbee-adb3-4371-b340-7e1782f2908c",
            "1e65557a-5024-4212-821e-c03cd75a3ea2",
            "80d5ed19-1a03-4ba4-aca0-0293ebe4b79a",
            "6214e8a9-9a13-471f-b4b6-189dfa488ff4",
            "6c2cda99-e22a-436a-8c60-bed538a007ab",
            "ba23171c-e241-479b-a3fc-5480f40ca793",
            "94dec853-33a3-49aa-98ac-106cba640615",
            "a2d8d0d6-d707-4e18-bce5-b3a51c978947"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}